syntax = "proto3";

option go_package = "./optionhub-proto";

service OptionhubService {
  rpc GetOsBySearchName (GetByNameIn) returns (GetByNameOut){};
  rpc GetOsByID (GetByIdIn) returns (GetByIdOut){};
  rpc GetAllOs (EmptyOptionhub) returns (GetAllOut){};
  rpc AddOs (AddIn) returns (AddOut){};
  rpc SetOsByID (SetByIdIn) returns (SetByIdOut){};
  rpc DeleteOsByID (DeleteByIdIn) returns (DeleteByIdOut){};

  rpc GetWorkPlaceBySearchName (GetByNameIn) returns (GetByNameOut){};
  rpc GetWorkPlaceByID (GetByIdIn) returns (GetByIdOut){};
  rpc AddWorkPlace (AddIn) returns (AddOut){};

  rpc GetStudyPlaceBySearchName (GetByNameIn) returns (GetByNameOut){};
  rpc GetStudyPlaceByID (GetByIdIn) returns (GetByIdOut){};
  rpc AddStudyPlace (AddIn) returns (AddOut){};

  rpc GetHobbyBySearchName (GetByNameIn) returns (GetByNameOut){};
  rpc GetHobbyByID (GetByIdIn) returns (GetByIdOut){};
  rpc AddHobby (AddIn) returns (AddOut){};

  rpc GetSkillBySearchName (GetByNameIn) returns (GetByNameOut){};
  rpc GetSkillByID (GetByIdIn) returns (GetByIdOut){};
  rpc AddSkill (AddIn) returns (AddOut){};

  rpc GetCityBySearchName (GetByNameIn) returns (GetByNameOut){};
  rpc GetCityByID (GetByIdIn) returns (GetByIdOut){};
  rpc AddCity (AddIn) returns (AddOut){};

  rpc GetSocietyDirectionBySearchName (GetByNameIn) returns (GetByNameOut){};
  rpc GetSocietyDirectionByID (GetByIdIn) returns (GetByIdOut){};
  rpc addSocietyDirection (AddIn) returns (AddOut){};
}

message EmptyOptionhub {}

message Record {
  int64 id = 1;
  string label = 2;
}

message GetByNameIn {
  string name = 1;
}

message GetByNameOut {
  repeated Record options = 1;
}

//message request
message GetByIdIn {
  // id of the row in the db
  int64 id = 1;
}

//message response
message GetByIdOut {
  int64 id = 1;
  string value = 2;
}

//message response for all active values
message GetAllOut {
  repeated Record values = 1;
}

//message request
message AddIn {
  //value that will be added
  string value = 1;
}

//message response
message AddOut {
  //id of added value
  int64 id = 1;
  string value = 2;
}

//message request
message SetByIdIn {
  int64 id = 1;
}

//message response
message SetByIdOut {
  //id of value that will be changed
  int64 id = 1;
  string value = 2;
}

//message request
message DeleteByIdIn {
  //value with such id will be marked as inactive
  int64 id = 1;
}

//message response
message DeleteByIdOut {
  //flag that says if deletion was successful
  bool ok = 1;
}
